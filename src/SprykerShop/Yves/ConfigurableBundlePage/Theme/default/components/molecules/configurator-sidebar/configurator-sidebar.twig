{% extends model('component') %}

{% define config = {
    name: 'configurator-sidebar',
    tag: 'ul',
} %}

{% define data = {
    form: required,
    configurableBundleTemplateStorage: required,
    isSeparateItemUnlocked: true,
    selectedSlotId: null,
    isSeparateItemActive: false,
} %}

{%- block extraClass %} spacing-left spacing-top{% endblock -%}

{% block body %}
    {% for configurableBundleTemplateSlotStorage in data.configurableBundleTemplateStorage.slots %}
        {% set slotClasses = '' %}

        {% block slotItem %}
            {% set submitButtonModifiers = ['expand', 'big-spaces'] %}

            <li class="{{ slotClasses }}">
                {% block slotItemInner %}
                    {% include molecule('configurator-state-form', 'ConfigurableBundlePage') with {
                        data: {
                            form: data.form.createView,
                            submitButtonText: configurableBundleTemplateSlotStorage.name | trans,
                            idConfigurableBundleTemplateSlot: configurableBundleTemplateSlotStorage.idConfigurableBundleTemplateSlot,
                            selectedSlotId: data.selectedSlotId,
                            submitButtonModifiers: submitButtonModifiers,
                            isExtraClass: true,
                            action: path(
                                'configurable-bundle/configurator/slots', {
                                    'idConfigurableBundleTemplate': data.configurableBundleTemplateStorage.idConfigurableBundleTemplate,
                                    'idConfigurableBundleTemplateSlot': configurableBundleTemplateSlotStorage.idConfigurableBundleTemplateSlot,
                                }
                            ),
                        },
                    } only %}
                {% endblock %}
            </li>
        {% endblock %}
    {% endfor %}

    {% set summaryClasses = '' %}

    {% block summary %}
        <li class="{{ summaryClasses }}">
            {% block itemInner %}
                {% set buttonModifiers = data.isSeparateItemActive ? ['expand', 'big-spaces', 'active'] : ['expand', 'big-spaces'] %}

                {% block itemAction %}
                    {% include molecule('configurator-state-form', 'ConfigurableBundlePage') with {
                        data: {
                            form: data.form.createView,
                            submitButtonText: 'configurable_bundle_page.configurator.summary' | trans,
                            isSubmitButtonActive: data.isSeparateItemUnlocked,
                            submitButtonModifiers: buttonModifiers,
                            isSeparateItem: true,
                            action: path(
                                'configurable-bundle/configurator/summary', {
                                    'idConfigurableBundleTemplate': data.configurableBundleTemplateStorage.idConfigurableBundleTemplate,
                                }
                            ),
                        },
                    } only %}
                {% endblock %}
            {% endblock %}
        </li>
    {% endblock %}
{% endblock %}
