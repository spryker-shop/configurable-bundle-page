{% extends model('component') %}

{% define config = {
    name: 'selected-product-list'
} %}

{% define data = {
    products: required,
    form: required,
    configurableBundleTemplateStorage: required
} %}

{% block body %}
    {% set configuratorForm = data.form.createView %}

    {% for idSlot,slotForm in configuratorForm.slots %}
        {% set sku = slotForm.vars.value.sku %}
        <div class="{{ config.name }}__heading grid grid--justify grid--middle">
            <span class="col col--sm-10">
                {{ data.configurableBundleTemplateStorage.slots[idSlot].name | trans }}
            </span>
            <span class="col col--sm-1">
                {% embed molecule('configurator-state-form', 'ConfigurableBundlePage') with {
                    data: {
                        form: configuratorForm,
                        submitButtonText: 'configurable_bundle_page.edit' | trans,
                        action: path(
                            'configurable-bundle/configurator/slots', {
                                'idConfigurableBundleTemplate': data.configurableBundleTemplateStorage.idConfigurableBundleTemplate,
                                'idConfigurableBundleTemplateSlot': data.configurableBundleTemplateStorage.slots[idSlot].idConfigurableBundleTemplateSlot,
                            }
                        )
                    },
                } only %}
                    {% block buttonClasses %}
                        {% set buttonClasses = 'button button--expand' %}

                        {% block button %}
                            {{ parent() }}
                        {% endblock %}
                    {% endblock %}
                {% endembed %}
            </span>
        </div>
        {% embed molecule('product', 'ProductSearchWidget') with {
            data: {
                product: data.products[sku],
                form: configuratorForm,
                selectedSlotId: '',
            },
            embed: {
                configurableBundleTemplateStorage: data.configurableBundleTemplateStorage,
                idSlot: idSlot,
            }
        } only %}
            {% block name %}
                <strong class="{{ config.name }}__name">{{ data.product.localizedAttributes[0].name }}</strong>
            {% endblock %}

            {% block actionsContainerInner %}{% endblock %}
        {% endembed %}
    {% endfor %}
{% endblock %}
